"""
The sequence of triangle numbers is generated by adding the natural numbers.
So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
"""

# Have a list of prime numbers that if insufficent, will update.
import math

def newPrimes(upper,lower):
    for x in range(lower,upper,2):
        y_prime = 1
        for y in range(2,x):
            if (x%y==0):
                y_prime = 0
                break

        if y_prime == 1:
            return x


def checkDiv(n,p):
    i = 0; cnt = 0; p_facs = [0]*len(p); up_l = n
    while n != 1:
        if (n%p[i] == 0):
            n = n/p[i]
            cnt += 1
            p_facs[i] = cnt
        else:
            cnt = 0
            i += 1

        # If primes insufficient, identify new ones
        if (i > len(p)-1):
            new_prime = newPrimes(up_l,p[i-1]+2)
            p.append(new_prime)
            p_facs.append(0)

    n_div = math.prod([x+1 for x in p_facs])

    return n_div, p

primes = [2, 3]; i = 2; tri = 3; div = 0
while div < 500:
    i += 1
    tri += i
    div,primes = checkDiv(tri,primes)

print(tri)
